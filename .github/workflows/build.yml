name: "Build"

on:
  pull_request: {}
  push:
    branches:
      - master

permissions: {}

jobs:
  install-dependencies:
    name: Dependencies

    runs-on: macos-latest

    steps:
      - uses: actions/checkout@v3

      - uses: actions/cache@v3
        with:
          path: Carthage
          key: ${{ runner.os }}-carthage-${{ hashFiles('**/Cartfile.resolved') }}

      - if: steps.carthage-cache.outputs.cache-hit != 'true'
        run: carthage bootstrap --use-xcframeworks --no-use-binaries --cache-builds

  test-ios:
    needs: install-dependencies

    strategy:
      fail-fast: true
      matrix:
        runner: ["macos-13"]
        build:
          - {os: "16", xcode: "14.3.1", swift: "5.9"}
          - {os: "16", xcode: "14.3.1", swift: "5.8"}
          - {os: "16", xcode: "14.3.1", swift: "5.7"}
          # - {os: "15", xcode: "14.3.1", swift: "5.9"}
          # - {os: "15", xcode: "14.3.1", swift: "5.8"}
          # - {os: "15", xcode: "14.3.1", swift: "5.7"}
          # - {os: "14", xcode: "14.3.1", swift: "5.9"}
          # - {os: "14", xcode: "14.3.1", swift: "5.8"}
          # - {os: "14", xcode: "14.3.1", swift: "5.7"}
          # - {os: "13", xcode: "14.3.1", swift: "5.9"}
          # - {os: "13", xcode: "14.3.1", swift: "5.8"}
          # - {os: "13", xcode: "14.3.1", swift: "5.7"}

    name: iOS ${{ matrix.build['os'] }} (Swift ${{ matrix.build['swift'] }}, Xcode ${{ matrix.build['xcode'] }}, Runner ${{ matrix.runner }})
    runs-on: ${{ matrix.runner }}

    steps:
      - uses: actions/checkout@v3

      - run: sudo xcode-select -switch /Applications/Xcode_${{ matrix.build['xcode'] }}.app && /usr/bin/xcodebuild -version

      - uses: actions/cache@v3
        with:
          path: Carthage
          key: ${{ runner.os }}-carthage-${{ hashFiles('**/Cartfile.resolved') }}

      - run: set -o pipefail && xcodebuild test -project Auth0.xcodeproj -enableCodeCoverage YES -scheme 'Auth0.iOS' -destination 'platform=iOS Simulator,OS=${{ matrix.build['os'] }},name=iPhone 14' CODE_SIGNING_ALLOWED=No | xcpretty

      - run: swift test --enable-code-coverage

  test-macos:
    needs: install-dependencies

    strategy:
      fail-fast: true
      matrix:
        build:
          - {os: "13", xcode: "14.3.1", swift: "5.9"}
          - {os: "13", xcode: "14.3.1", swift: "5.8"}
          - {os: "13", xcode: "14.3.1", swift: "5.7"}
          - {os: "12", xcode: "14.3.1", swift: "5.9"}
          - {os: "12", xcode: "14.3.1", swift: "5.8"}
          - {os: "12", xcode: "14.3.1", swift: "5.7"}
          # - {os: "11", xcode: "14.3.1", swift: "5.9"}
          # - {os: "11", xcode: "14.3.1", swift: "5.8"}
          # - {os: "11", xcode: "14.3.1", swift: "5.7"}

    name: macOS ${{ matrix.build['os'] }} (Swift ${{ matrix.build['swift'] }}, Xcode ${{ matrix.build['xcode'] }})
    runs-on: macos-${{ matrix.build['os'] }}

    steps:
      - uses: actions/checkout@v3

      - run: sudo xcode-select -switch /Applications/Xcode_${{ matrix.build['xcode'] }}.app && /usr/bin/xcodebuild -version

      - uses: actions/cache@v3
        with:
          path: Carthage
          key: ${{ runner.os }}-carthage-${{ hashFiles('**/Cartfile.resolved') }}

      - run: set -o pipefail && xcodebuild test -project Auth0.xcodeproj -enableCodeCoverage YES -scheme 'Auth0.macOS' -destination 'platform=macOS' CODE_SIGNING_ALLOWED=No | xcpretty

      - run: swift test --enable-code-coverage

  test-tvos:
    needs: install-dependencies

    strategy:
      fail-fast: true
      matrix:
        runner: ["macos-13"]
        build:
          - {os: "13", xcode: "14.3.1", swift: "5.9"}
          - {os: "13", xcode: "14.3.1", swift: "5.8"}
          - {os: "13", xcode: "14.3.1", swift: "5.7"}
          - {os: "12", xcode: "14.3.1", swift: "5.9"}
          - {os: "12", xcode: "14.3.1", swift: "5.8"}
          - {os: "12", xcode: "14.3.1", swift: "5.7"}
          - {os: "11", xcode: "14.3.1", swift: "5.9"}
          - {os: "11", xcode: "14.3.1", swift: "5.8"}
          - {os: "11", xcode: "14.3.1", swift: "5.7"}

    name: tvOS ${{ matrix.build['os'] }} (Swift ${{ matrix.build['swift'] }}, Xcode ${{ matrix.build['xcode'] }})
    runs-on: ${{ matrix.runner }}

    steps:
      - uses: actions/checkout@v3

      - run: sudo xcode-select -switch /Applications/Xcode_${{ matrix.build['xcode'] }}.app && /usr/bin/xcodebuild -version

      - uses: actions/cache@v3
        with:
          path: Carthage
          key: ${{ runner.os }}-carthage-${{ hashFiles('**/Cartfile.resolved') }}

      - run: set -o pipefail && xcodebuild test -project Auth0.xcodeproj -enableCodeCoverage YES -scheme 'Auth0.tvOS' -destination 'platform=tvOS Simulator,OS=${{ matrix.os }},name=Apple TV 4K' CODE_SIGNING_ALLOWED=No | xcpretty

      - run: swift test --enable-code-coverage

  swiftlint:
    name: "Swiftlint"
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v3

      - run: sudo rm '/usr/local/bin/swiftlint' && brew install swiftlint

      - run: swiftlint  --parallel --configuration .swiftlint.yml -r .

  cocoapods-lint:
    needs: install-dependencies
    name: "Cocoapods Lint"
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v3

      - run: bundle install
        env:
          BUNDLE_WITHOUT: development # Stop bundler tool from installing development dependencies

      - run: bundle exec fastlane run pod_lib_lint verbose:false allow_warnings:true platforms:ios,osx,tvos
