name: "Build"

on:
  pull_request: {}
  push:
    branches:
      - master

permissions: {}

jobs:
  build-and-test:
    strategy:
      fail-fast: true
      matrix:
        scheme: ["macOS", "tvOS"],
        os: ["13", "12", "11"],
        xcode: ["14.3"],
        swift: ["5.9", "5.8", "5.7"]

    # Label the job with the platform, Xcode version, and Swift version
    name: ${{ matrix.build['scheme'] }} ${{ matrix.build['os'] }} (Xcode ${{ matrix.build['xcode'] }}, Swift ${{ matrix.build['swift'] }}, Runner macOS-${{ matrix.build['os'] }})

    # Run the job on macOS
    runs-on: macos-${{ matrix.build['os'] }}

    env:
      DEVELOPER_DIR: /Applications/Xcode_${{ matrix.build['xcode'] }}.app/Contents/Developer
      XCODEDEBUG_TEST: test -project Auth0.xcodeproj -enableCodeCoverage YES -scheme 'Auth0.${{ matrix.build['scheme'] }}' -destination
      IOS_DESTINATION: platform=iOS Simulator,OS=${{ matrix.build['os'] }},name=iPhone X
      MACOS_DESTINATION: platform=macOS,OS=${{ matrix.build['os'] }}
      TVOS_DESTINATION: platform=tvOS Simulator,OS=${{ matrix.build['os'] }},name=Apple TV 4K

    steps:
      - name: "Checkout Code"
        uses: actions/checkout@v3

      # - uses: mxschmitt/action-tmate@v3
      #   with:
      #     detached: true

      - if: ${{ env.scheme == 'iOS' }}
        run: ${{ env.XCODEDEBUG_TEST }} ${{env.IOS_DESTINATION}} | xcpretty

      - if: ${{ env.scheme == 'macOS' }}
        run: ${{ env.XCODEDEBUG_TEST }} ${{env.MACOS_DESTINATION}} | xcpretty

      - if: ${{ env.scheme == 'tvOS' }}
        run: ${{ env.XCODEDEBUG_TEST }} ${{env.MACOS_DESTINATION}} | xcpretty

      - run: swift test --enable-code-coverage

  swiftlint:
    name: "Swiftlint"
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v3

      - run: brew install swiftlint --force

      - run: swift lint  --parallel --configuration .swiftlint.yml -r .

  cocoapods-lint:
    name: "Cocoapods Lint"
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v3

      - run: bundle install
        env:
          BUNDLE_WITHOUT: development # Stop bundler tool from installing development dependencies

      - run: bundle exec fastlane run pod_lib_lint verbose:false allow_warnings:true platforms:ios,osx,tvos
